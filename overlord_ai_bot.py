import telebot
from telebot import types
import random
import os
import requests
from io import BytesIO
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv('BOT_TOKEN', "7972832759:AAEwXCLf7bXdYguvmx4cJvPCfnfWmslXVW8")
bot = telebot.TeleBot(BOT_TOKEN, parse_mode='Markdown')

# URL –¥–ª—è –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤
MEDIA_URLS = {
    "video": "https://huggingface.co/guroexe/overlord_bot/resolve/main/IKONA%20-%20%D0%98%D0%98.mp4?download=true",
    "gif": "https://huggingface.co/guroexe/overlord_bot/resolve/main/14.gif?download=true"
}

# –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ Hugging Face
HEADERS = {
    'User-Agent': 'TelegramBot/1.0'
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
def download_media(url):
    try:
        response = requests.get(url, headers=HEADERS, stream=True)
        response.raise_for_status()
        
        # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª–æ–ø–æ–¥–æ–±–Ω—ã–π –æ–±—ä–µ–∫—Ç
        file_like = BytesIO()
        for chunk in response.iter_content(chunk_size=8192):
            file_like.write(chunk)
        file_like.seek(0)
        
        return file_like
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ–¥–∏–∞: {e}")
        return None

@bot.message_handler(commands=['start'])
def start_message(message):
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ
        send_welcome_video(message.chat.id)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞
        send_bot_description(message.chat.id)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º GIF —Å Google Colab
        send_colab_gif(message.chat.id)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        show_main_menu(message.chat.id)
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ /start: {e}")
        bot.send_message(message.chat.id, "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

def send_welcome_video(chat_id):
    try:
        video = download_media(MEDIA_URLS["video"])
        if video:
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º MIME-—Ç–∏–ø –ø–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—é —Ñ–∞–π–ª–∞
            video.name = "welcome_video.mp4"
            bot.send_video(chat_id, video, caption="üé¨ *–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π OVERLORD AI INK*")
        else:
            bot.send_message(chat_id, "üé¨ *–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π OVERLORD AI INK*\n\n–í–∏–¥–µ–æ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ.")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–∏–¥–µ–æ: {e}")
        bot.send_message(chat_id, "üé¨ *–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π OVERLORD AI INK*\n\n–í–∏–¥–µ–æ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ.")

def send_colab_gif(chat_id):
    colab_text = """
üöÄ **–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –≤ Google Colab!**

[–û—Ç–∫—Ä—ã—Ç—å Google Colab –±–ª–æ–∫–Ω–æ—Ç](https://colab.research.google.com/drive/your_notebook_link)

–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ—ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –º–æ–¥–µ–ª—è–º–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ Stable Diffusion –±–µ—Å–ø–ª–∞—Ç–Ω–æ!
"""
    
    try:
        gif = download_media(MEDIA_URLS["gif"])
        if gif:
            gif.name = "colab_demo.gif"
            bot.send_animation(chat_id, gif, caption=colab_text)
        else:
            bot.send_message(chat_id, colab_text)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ GIF: {e}")
        bot.send_message(chat_id, colab_text)

# –û—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
def send_bot_description(chat_id):
    description_text = """
ü§ñ **OVERLORD AI INK (Free Train)**

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä —Å–æ–∑–¥–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å –ø–æ–º–æ—â—å—é –ò–ò!

**–ß—Ç–æ —ç—Ç–æ —Ç–∞–∫–æ–µ?**
OVERLORD AI INK - —ç—Ç–æ –±–æ—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å –ø–æ–º–æ—â—å—é Stable Diffusion. –í—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø–æ—Ç—Ä—è—Å–∞—é—â–∏–µ –∞—Ä—Ç–≤–æ—Ä–∫–∏, –ø—Ä–æ—Å—Ç–æ –æ–ø–∏—Å–∞–≤ —Ç–æ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–≤–∏–¥–µ—Ç—å.

**–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è Stable Diffusion:**
1. –û–ø–∏—à–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ
2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–µ—Ç–∞–ª—å–Ω—ã–µ –æ–ø–∏—Å–∞–Ω–∏—è
3. –î–æ–±–∞–≤–ª—è–π—Ç–µ —Å—Ç–∏–ª–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ —Ç–µ–≥–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä: "digital art", "photorealistic")
4. –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –ø—Ä–æ–º–ø—Ç–∞–º–∏

**–°–æ–≤–µ—Ç—ã –¥–ª—è –ª—É—á—à–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:**
‚Ä¢ –ë—É–¥—å—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ –≤ –æ–ø–∏—Å–∞–Ω–∏—è—Ö
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ç–µ—Ä–º–∏–Ω—ã
‚Ä¢ –î–æ–±–∞–≤–ª—è–π—Ç–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–∞—á–µ—Å—Ç–≤–∞
‚Ä¢ –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —Å–æ —Å—Ç–∏–ª—è–º–∏
"""
    bot.send_message(chat_id, description_text)

def show_main_menu(chat_id):
    markup = types.InlineKeyboardMarkup(row_width=1)
    
    prompt_btn = types.InlineKeyboardButton("üìù –ü—Ä–∏–º–µ—Ä –ø—Ä–æ–º–ø—Ç–∞", callback_data="example_prompt")
    pro_btn = types.InlineKeyboardButton("‚≠ê –ü–æ–ª–Ω–∞—è –í–µ—Ä—Å–∏—è OVERLORD AI INK PRO", callback_data="pro_version")
    
    markup.add(prompt_btn, pro_btn)
    
    bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)

# –û—Å—Ç–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
# ...

if __name__ == "__main__":
    logger.info("–ë–æ—Ç OVERLORD AI INK –∑–∞–ø—É—â–µ–Ω...")
    bot.infinity_polling()
